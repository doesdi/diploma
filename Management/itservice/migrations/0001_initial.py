# Generated by Django 4.2 on 2023-05-10 13:26

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_type', models.CharField(choices=[('Компания', 'Компания'), ('Физ.Лицо', 'Физ.Лицо')], default='Физ.лицо', max_length=15, verbose_name='Тип клиента')),
                ('client_name', models.CharField(max_length=50, verbose_name='Имя клиента')),
                ('client_phone', models.CharField(max_length=40, verbose_name='Номер телефона')),
                ('client_email', models.CharField(max_length=100, verbose_name='Email')),
                ('client_address', models.CharField(max_length=50, verbose_name='Адрес')),
                ('client_found', models.CharField(choices=[('Знакомые', 'Знакомые'), ('Интернет', 'Интернет'), ('Реклама', 'Реклама')], default='Знакомые', max_length=15, verbose_name='Откуда клиент узнал о нас?')),
            ],
        ),
        migrations.CreateModel(
            name='role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(max_length=50, verbose_name='Название роли')),
            ],
        ),
        migrations.CreateModel(
            name='tasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=50, verbose_name='Название задачи')),
                ('task_description', models.CharField(max_length=1000, verbose_name='Описание задачи')),
                ('task_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='Крайний срок')),
                ('task_active', models.BooleanField(default=True, verbose_name='Активна')),
            ],
        ),
        migrations.CreateModel(
            name='sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sales_name', models.CharField(max_length=100, verbose_name='Наименование работы')),
                ('sales_comment', models.CharField(max_length=100, verbose_name='Комментарий')),
                ('sales_price', models.CharField(max_length=100, verbose_name='Цена')),
                ('sales_time', models.DateTimeField(default=datetime.datetime.today, verbose_name='Время продажи')),
                ('sales_client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='itservice.client')),
            ],
        ),
        migrations.CreateModel(
            name='orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_name', models.CharField(max_length=50, verbose_name='Название заказа')),
                ('order_description', models.CharField(max_length=1000, verbose_name='Требования к заказу')),
                ('order_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='Крайний срок')),
                ('order_price', models.IntegerField(verbose_name='Ориентировочная стоимость')),
                ('order_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('order_client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='itservice.client', verbose_name='Клиент')),
            ],
        ),
        migrations.CreateModel(
            name='inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_type', models.CharField(choices=[('Устройство', 'Устройство'), ('Запчасти', 'Запчасти')], default='Устройство', max_length=15, verbose_name='Категория')),
                ('inventory_article', models.IntegerField(verbose_name='Артикул')),
                ('inventory_name', models.CharField(max_length=50, verbose_name='Название')),
                ('inventory_color', models.CharField(max_length=40, verbose_name='Цвет')),
                ('inventory_condition', models.CharField(max_length=100, verbose_name='Состояние')),
                ('inventory_description', models.CharField(max_length=1000, verbose_name='Описание')),
                ('inventory_client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='itservice.client', verbose_name='Клиент')),
            ],
        ),
        migrations.CreateModel(
            name='users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_phone', models.CharField(max_length=40, verbose_name='Номер телефона')),
                ('user_note', models.CharField(max_length=50, verbose_name='Примечание')),
                ('user_time', models.DateField(default=datetime.date.today, verbose_name='Дата начала работы')),
                ('user_photo', models.ImageField(upload_to='photos/%y/%m/%d/', verbose_name='Фото сотрудника')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
